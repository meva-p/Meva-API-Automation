{
	"info": {
		"_postman_id": "87bbae09-2ff7-4768-b620-4568b1081241",
		"name": "Books Batch 54",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "33652288",
		"_collection_link": "https://www.postman.com/spaceflight-observer-34392607/workspace/books-batch-54/collection/33652288-87bbae09-2ff7-4768-b620-4568b1081241?action=share&source=collection_link&creator=33652288"
	},
	"item": [
		{
			"name": "API Authentication",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var clientName = \"Meva-\" + pm.variables.replaceIn('{{$randomInt}}');\r",
							"\r",
							"pm.environment.set(\"name\", \"clientName\");\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"accessToken\", jsonData.accessToken);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"clientName\": \"{{name}}\",\r\n   \"clientEmail\": \"{{$randomEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/api-clients/"
			},
			"response": []
		},
		{
			"name": "Status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/status"
			},
			"response": []
		},
		{
			"name": "List of Books",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"\tpm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/books?type&limit",
					"host": [
						"{{url}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": null
						},
						{
							"key": "limit",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Book",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/books/:bookId?type&limit",
					"host": [
						"{{url}}"
					],
					"path": [
						"books",
						":bookId"
					],
					"query": [
						{
							"key": "type",
							"value": null
						},
						{
							"key": "limit",
							"value": null
						}
					],
					"variable": [
						{
							"key": "bookId",
							"value": "4"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 10000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.get(\"variable_key\");\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"pm.environment.set(\"orderId\", jsonData.orderId);\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var clientName = \"Meva-\" + pm.variables.replaceIn('{{$randomInt}}');\r",
							"\r",
							"pm.environment.set(\"name\", \"clientName\");\r",
							"\r",
							"pm.environment.set(\"bookId\", _.random(1, 5));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{accessToken}}"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": \"{{bookId}}\",\r\n  \"customerName\": \"{{name}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/orders"
			},
			"response": []
		},
		{
			"name": "All Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"\tpm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{accessToken}}"
					}
				},
				"method": "GET",
				"header": [
					{
						"key": "orhglmNZnHBtDzE7vAmnS",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/orders"
			},
			"response": []
		},
		{
			"name": "Single Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var clientName = \"Meva-\" + pm.variables.replaceIn('{{$randomInt}}');\r",
							"\r",
							"pm.environment.set(\"name\", \"clientName\");\r",
							"\r",
							"pm.environment.set(\"bookId\", _.random(1, 5));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{accessToken}}"
					}
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": \"{{bookId}}\",\r\n  \"customerName\": \"{{name}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/orders/:orderId",
					"host": [
						"{{url}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 or 404\", \"Status code is 404\", function () {\r",
							" pm.response.to.have.status(204);\r",
							"\tpm.response.to.have.status(404);\r",
							"}) \r",
							"\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});\r",
							"\r",
							"pm.collectionVariables.get(\"variable_key\");\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var clientName = \"Meva-\" + pm.variables.replaceIn('{{$randomInt}}');\r",
							"\r",
							"pm.environment.set(\"name\", \"clientName\");\r",
							"\r",
							"pm.environment.set(\"bookId\", _.random(1, 5));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{accessToken}}"
					}
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": \"{{bookId}}\",\r\n  \"customerName\": \"{{name}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/orders/:orderId",
					"host": [
						"{{url}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single Order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var clientName = \"Meva-\" + pm.variables.replaceIn('{{$randomInt}}');\r",
							"\r",
							"pm.environment.set(\"name\", \"clientName\");\r",
							"\r",
							"pm.environment.set(\"bookId\", _.random(1, 5));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204 or 404\", \"Status code is 404\", function () {\r",
							" pm.response.to.have.status(204);\r",
							"\tpm.response.to.have.status(404);\r",
							"})\r",
							"\r",
							"pm.test(\"Response time is less than 20000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(20000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{accessToken}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"bookId\": \"{{bookId}}\",\r\n  \"customerName\": \"{{name}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/orders/:orderId",
					"host": [
						"{{url}}"
					],
					"path": [
						"orders",
						":orderId"
					],
					"variable": [
						{
							"key": "orderId",
							"value": "{{orderId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		}
	]
}